(defwidget bar []
  (centerbox :orientation "h" :class "bar"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (systray :class "systray")
    (tooltip :class "connection"
      {connection.full}
      {connection.short})
    (metric :label "ÔÄ®"
            :value volume
            :onchange "")
    (metric :label "Ôíº"
            :value {EWW_CPU.avg}
            :onchange "")
    (metric :label "ÔÉâ"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    "${round(EWW_TEMPS.K10TEMP_TCTL, 0)}ÓåæC"
    (metric :label "ÔÇ†"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "hyprctl dispatch workspace 1" 1)
    (button :onclick "hyprctl dispatch workspace 2" 2)
    (button :onclick "hyprctl dispatch workspace 3" 3)
    (button :onclick "hyprctl dispatch workspace 4" 4)
    (button :onclick "hyprctl dispatch workspace 5" 5)
    (button :onclick "hyprctl dispatch workspace 6" 6)
    (button :onclick "hyprctl dispatch workspace 7" 7)
    (button :onclick "hyprctl dispatch workspace 8" 8)
    (button :onclick "hyprctl dispatch workspace 9" 9)))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "Û∞ùö ${music}" : ""})) ; üéµ

(defwidget metric [label value onchange]
  (box :orientation "v"
       :class "metric"
       :space-evenly false
       :valign "end"
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "scripts/monitormusic")

;TODO: make listener based on 'nmcli connection monitor'
(defpoll connection :interval "10s"
  "scripts/monitorconnection")

(deflisten volume :inital "?%"
  "scripts/monitorvolume")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar0
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "32px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  :exclusive true
  (bar))
(defwindow bar1
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "32px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  :exclusive true
  (bar))
